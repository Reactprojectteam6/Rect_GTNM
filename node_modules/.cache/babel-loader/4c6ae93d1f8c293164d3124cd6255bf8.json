{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\kieu\\\\Desktop\\\\final_project\\\\my_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//Login\nimport axios from 'axios';\nconst UPDATE_USER = 'UPDATE_USER';\nexport function updateUser(id, user_name, email, address, password, newpassword) {\n  console.log(\"abc\");\n  return dispatch => {\n    callUpdateApi(id, user_name, email, address, password, newpassword, data => {\n      dispatch(setUpdateUser(data)); //tra ve cho form\n    });\n  };\n}\n\nfunction setUpdateUser(user) {\n  console.log(user);\n  return {\n    type: UPDATE_USER,\n    user\n  };\n}\n\nfunction callUpdateApi(id, user_name, email, address, password, newpassword, callback) {\n  console.log(password);\n  axios.get(\"http://127.0.0.1:3000/users?id=\" + id).then(res => {\n    const user = res.data;\n\n    if (res.data != null) {\n      console.log(user[0].password);\n\n      if (user[0].password == String(password)) {\n        axios.put(\"http://127.0.0.1:3000/users/\" + id, {\n          user_name: user_name,\n          email: email,\n          address: address,\n          password: newpassword\n        }).then(res => {\n          console.log(res.data);\n\n          if (res.data != null) {\n            var currentUser = {\n              id: res.data.id,\n              user_name: res.data.user_name,\n              email: res.data.email,\n              address: res.data.address\n            };\n            localStorage.setItem('User', JSON.stringify(currentUser));\n            return callback(res.data);\n          } else return callback(new Error(\"Invalid any field to update\"));\n        });\n      } else callback(new Error(\"Old password is not correct to update your profile\"));\n\n      return callback(user); //not error\n    }\n  });\n}\n\nvar dt1 = JSON.parse(localStorage.getItem('User'));\nvar user_state = {\n  data: dt1 ? dt1 : []\n};\nexport default function admin_reducer(state = user_state, action) {\n  if (action.type == 'UPDATE_USER') {\n    let newState = _objectSpread({}, state);\n\n    newState.data = action.data;\n    return newState;\n  } else return state;\n}","map":{"version":3,"sources":["C:/Users/kieu/Desktop/final_project/my_app/src/redux/admin_reducer.js"],"names":["axios","UPDATE_USER","updateUser","id","user_name","email","address","password","newpassword","console","log","dispatch","callUpdateApi","data","setUpdateUser","user","type","callback","get","then","res","String","put","currentUser","localStorage","setItem","JSON","stringify","Error","dt1","parse","getItem","user_state","admin_reducer","state","action","newState"],"mappings":"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","sourcesContent":["//Login\r\nimport axios from 'axios';\r\nconst UPDATE_USER='UPDATE_USER';\r\nexport function updateUser(id,user_name,email,address,password,newpassword) {\r\n  console.log(\"abc\"); \r\n  return dispatch => {\r\n     callUpdateApi(id,user_name,email,address,password,newpassword,data => {\r\n         dispatch(setUpdateUser(data));//tra ve cho form\r\n        \r\n    });\r\n  }\r\n}\r\n\r\nfunction setUpdateUser(user) {\r\n  console.log(user);\r\n  return {\r\n    type:UPDATE_USER,\r\n    user\r\n  };\r\n}\r\n\r\nfunction callUpdateApi(id,user_name,email,address,password,newpassword, callback) {\r\n  console.log(password)\r\n  axios.get(`http://127.0.0.1:3000/users?id=`+id)\r\n  .then(res => {\r\n  const  user = res.data;\r\n    if (res.data!=null)\r\n     { console.log(user[0].password);\r\n       if(user[0].password==String(password))\r\n        {  axios.put(`http://127.0.0.1:3000/users/`+id,{\r\n           user_name:user_name,\r\n           email:email,\r\n           address:address,\r\n           password:newpassword,\r\n\r\n        }).then(res => {\r\n         console.log(res.data);\r\n         if(res.data!=null) \r\n         {  \r\n          var currentUser={\r\n            id:res.data.id,\r\n            user_name:res.data.user_name,\r\n           email:res.data.email,\r\n           address:res.data.address,\r\n           }\r\n          \r\n            localStorage.setItem('User',JSON.stringify(currentUser))\r\n             return callback(res.data);\r\n         }\r\n         else return callback(new Error(\"Invalid any field to update\"));\r\n        })\r\n\r\n           \r\n        }\r\n        else callback(new Error(\"Old password is not correct to update your profile\"))\r\n\r\n\r\n      return callback(user);//not error\r\n    } \r\n  }\r\n  )\r\n\r\n}\r\nvar dt1=JSON.parse(localStorage.getItem('User'));\r\nvar user_state={\r\n  data:dt1?dt1:[],\r\n}\r\nexport default function admin_reducer(state =user_state, action) {\r\n \r\n  if(action.type=='UPDATE_USER')\r\n  { let newState={...state};\r\n    newState.data=action.data;\r\n    return newState;\r\n  }\r\n  else return state;\r\n}"]},"metadata":{},"sourceType":"module"}