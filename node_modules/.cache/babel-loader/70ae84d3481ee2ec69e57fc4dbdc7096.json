{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kieu\\\\Desktop\\\\React_Final\\\\my_app\\\\src\\\\Component\\\\Cart\\\\CartContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Cart from './Cart';\nimport CartItem from './CartItem';\nimport CartResult from './CartResult';\nimport { actDeleteProductInCart, actUpdateProductInCart } from '../../redux/cart_reducer';\n\nclass CartContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.showCartItem = cart => {\n      var _this$props = this.props,\n          onDeleteProductInCart = _this$props.onDeleteProductInCart,\n          onUpdateProductInCart = _this$props.onUpdateProductInCart;\n\n      if (cart.length > 0) {\n        var result = cart.map((item, index) => {\n          return React.createElement(CartItem, {\n            key: index,\n            item: item,\n            index: index,\n            onDeleteProductInCart: onDeleteProductInCart,\n            onChangeMessage: onChangeMessage,\n            onUpdateProductInCart: onUpdateProductInCart,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 26\n            },\n            __self: this\n          });\n        });\n      }\n\n      return result;\n    };\n\n    this.showTotalAmount = cart => {\n      var result = null;\n\n      if (cart.length > 0) {\n        result = React.createElement(CartResult, {\n          cart: cart,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        });\n      }\n\n      return result;\n    };\n  }\n\n  render() {\n    var cart = this.props.cart;\n    return React.createElement(Cart, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, this.showCartItem(cart), this.showTotalAmount(cart));\n  }\n\n}\n\nCartContainer.propTypes = {\n  cart: PropTypes.arrayOf(PropTypes.shape({\n    product: PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      image: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      price: PropTypes.number.isRequired,\n      inventory: PropTypes.number.isRequired,\n      rating: PropTypes.number.isRequired\n    }).isRequired,\n    quantity: PropTypes.number.isRequired\n  })).isRequired,\n  onDeleteProductInCart: PropTypes.func.isRequired,\n  onUpdateProductInCart: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    cart: state.cartState\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onDeleteProductInCart: product => {\n      dispatch(actDeleteProductInCart(product));\n    },\n    onUpdateProductInCart: (product, quantity) => {\n      dispatch(actUpdateProductInCart(product, quantity));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartContainer);","map":{"version":3,"sources":["C:/Users/kieu/Desktop/React_Final/my_app/src/Component/Cart/CartContainer.js"],"names":["React","Component","connect","PropTypes","Cart","CartItem","CartResult","actDeleteProductInCart","actUpdateProductInCart","CartContainer","showCartItem","cart","props","onDeleteProductInCart","onUpdateProductInCart","length","result","map","item","index","onChangeMessage","showTotalAmount","render","propTypes","arrayOf","shape","product","id","number","isRequired","name","string","image","description","price","inventory","rating","quantity","func","mapStateToProps","state","cartState","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Cart from './Cart';\nimport CartItem from './CartItem';\nimport CartResult from './CartResult';\nimport { actDeleteProductInCart,actUpdateProductInCart } from '../../redux/cart_reducer';\n\nclass CartContainer extends Component {\n\n    render() {\n        var { cart } = this.props;\n        return (\n            <Cart>\n                {this.showCartItem(cart)}\n                {this.showTotalAmount(cart)}\n            </Cart>\n        );\n    }\n\n    showCartItem = (cart) => {\n        var { onDeleteProductInCart, onUpdateProductInCart } = this.props;\n        if (cart.length > 0) {\n           var result = cart.map((item, index) => {\n                return (\n                    <CartItem\n                        key={index}\n                        item={item}\n                        index={index}\n                        onDeleteProductInCart={onDeleteProductInCart}\n                        onChangeMessage={onChangeMessage}\n                        onUpdateProductInCart={onUpdateProductInCart}\n                    />\n                );\n            });\n        }\n        return result;\n    }\n\n    showTotalAmount = (cart) => {\n        var result = null;\n        if (cart.length > 0) {\n            result = <CartResult cart={cart} />\n        }\n        return result;\n    }\n\n}\n\nCartContainer.propTypes = {\n    cart: PropTypes.arrayOf(PropTypes.shape({\n        product: PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            name: PropTypes.string.isRequired,\n            image: PropTypes.string.isRequired,\n            description: PropTypes.string.isRequired,\n            price: PropTypes.number.isRequired,\n            inventory: PropTypes.number.isRequired,\n            rating: PropTypes.number.isRequired\n        }).isRequired,\n        quantity: PropTypes.number.isRequired\n    })).isRequired,\n    onDeleteProductInCart : PropTypes.func.isRequired,\n    onUpdateProductInCart : PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => {\n    return {\n        cart: state.cartState\n    }\n}\n\nconst mapDispatchToProps = (dispatch, props) => {\n    return {\n        onDeleteProductInCart: (product) => {\n            dispatch(actDeleteProductInCart(product));\n        },\n        onUpdateProductInCart: (product, quantity) => {\n            dispatch(actUpdateProductInCart(product, quantity));\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartContainer);\n"]},"metadata":{},"sourceType":"module"}