{"ast":null,"code":"import axios from 'axios';\nconst SET_LOGIN_PENDING = 'SET_LOGIN_PENDING';\nconst SET_LOGIN_SUCCESS = 'SET_LOGIN_SUCCESS';\nconst SET_LOGIN_ERROR = 'SET_LOGIN_ERROR';\nexport function login(email, password) {\n  //reducer thuc hien action login xu ly du lieu lay qua\n  return dispatch => {\n    dispatch(setLoginPending(true));\n    dispatch(setLoginSuccess(false));\n    dispatch(setLoginError(null));\n    callLoginApi(email, password, error => {\n      dispatch(setLoginPending(false)); //tra ve cho form\n\n      if (!error) {\n        dispatch(setLoginSuccess(true)); //tra ve cho form\n      } else {\n        dispatch(setLoginError(error)); //tra ve cho form\n      }\n    });\n  };\n}\n\nfunction setLoginPending(isLoginPending) {\n  return {\n    type: SET_LOGIN_PENDING,\n    isLoginPending\n  };\n}\n\nfunction setLoginSuccess(isLoginSuccess) {\n  return {\n    type: SET_LOGIN_SUCCESS,\n    isLoginSuccess\n  };\n}\n\nfunction setLoginError(loginError) {\n  return {\n    type: SET_LOGIN_ERROR,\n    loginError\n  };\n}\n\nfunction callLoginApi(email, password, callback) {\n  axios.get(\"http://127.0.0.1:3000/users?email=\" + email).then(res => {\n    const user = res.data;\n    console.log(user);\n    setTimeout(() => {\n      if (email === user[0].email && password === user[0].password) {\n        return callback(null); //not error\n      } else {\n        return callback(new Error('Invalid email and password'));\n      }\n    }, 1000);\n  });\n}\n\nexport default function reducer(state = {\n  //Tra ve state cho form\n  isLoginPending: false,\n  loginError: null\n}, action) {\n  switch (action.type) {\n    case SET_LOGIN_PENDING:\n      return Object.assign({}, state, {\n        isLoginPending: action.isLoginPending\n      });\n\n    case SET_LOGIN_SUCCESS:\n      return Object.assign({}, state, {\n        isLoginSuccess: action.isLoginSuccess\n      });\n\n    case SET_LOGIN_ERROR:\n      return Object.assign({}, state, {\n        loginError: action.loginError\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/kieu/Desktop/React_Final/my_app/src/redux/reducer.js"],"names":["axios","SET_LOGIN_PENDING","SET_LOGIN_SUCCESS","SET_LOGIN_ERROR","login","email","password","dispatch","setLoginPending","setLoginSuccess","setLoginError","callLoginApi","error","isLoginPending","type","isLoginSuccess","loginError","callback","get","then","res","user","data","console","log","setTimeout","Error","reducer","state","action","Object","assign"],"mappings":"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","sourcesContent":["import axios from 'axios';\nconst SET_LOGIN_PENDING = 'SET_LOGIN_PENDING';\nconst SET_LOGIN_SUCCESS = 'SET_LOGIN_SUCCESS';\nconst SET_LOGIN_ERROR = 'SET_LOGIN_ERROR';\n\nexport function login(email, password) { //reducer thuc hien action login xu ly du lieu lay qua\n  return dispatch => {\n    dispatch(setLoginPending(true));\n    dispatch(setLoginSuccess(false));\n    dispatch(setLoginError(null));\n\n    callLoginApi(email, password, error => {\n      dispatch(setLoginPending(false));//tra ve cho form\n      if (!error) {\n        dispatch(setLoginSuccess(true));//tra ve cho form\n      } else {\n        dispatch(setLoginError(error));//tra ve cho form\n      }\n    });\n  }\n}\n\n\nfunction setLoginPending(isLoginPending) {\n  return {\n    type: SET_LOGIN_PENDING,\n    isLoginPending\n  };\n}\n\nfunction setLoginSuccess(isLoginSuccess) {\n  return {\n    type: SET_LOGIN_SUCCESS,\n    isLoginSuccess\n  };\n}\n\nfunction setLoginError(loginError) {\n  return {\n    type: SET_LOGIN_ERROR,\n    loginError\n  }\n}\n\nfunction callLoginApi(email, password, callback) {\n \n  axios.get(`http://127.0.0.1:3000/users?email=`+email)\n  .then(res => {\n  const  user = res.data;\n   console.log(user);\n  setTimeout(() => {\n    if (email === user[0].email&& password ===user[0].password) {\n      return callback(null);//not error\n    } else {\n      return callback(new Error('Invalid email and password'));\n    }\n  }, 1000);\n \n\n  }\n  )\n\n}\n\nexport default function reducer(state = {//Tra ve state cho form\n  isLoginPending: false,\n  loginError: null\n}, action) {\n  switch (action.type) {\n    case SET_LOGIN_PENDING:\n      return Object.assign({}, state, {\n        isLoginPending: action.isLoginPending\n      });\n\n    case SET_LOGIN_SUCCESS:\n      return Object.assign({}, state, {\n        isLoginSuccess: action.isLoginSuccess\n      });\n\n    case SET_LOGIN_ERROR:\n      return Object.assign({}, state, {\n        loginError: action.loginError\n      });\n\n    default:\n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}