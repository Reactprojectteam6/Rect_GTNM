{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kieu\\\\Desktop\\\\final_project\\\\my_app\\\\src\\\\Component\\\\Paypal\\\\PaypalButton.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport scriptLoader from 'react-async-script-loader';\n\nclass PaypalButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showButton: false\n    };\n    window.React = React;\n    window.ReactDOM = ReactDOM;\n  }\n\n  componentDidMount() {\n    const _this$props = this.props,\n          isScriptLoaded = _this$props.isScriptLoaded,\n          isScriptLoadSucceed = _this$props.isScriptLoadSucceed;\n\n    if (isScriptLoaded && isScriptLoadSucceed) {\n      this.setState({\n        showButton: true\n      });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const isScriptLoaded = nextProps.isScriptLoaded,\n          isScriptLoadSucceed = nextProps.isScriptLoadSucceed;\n    const isLoadedButWasntLoadedBefore = !this.state.showButton && !this.props.isScriptLoaded && isScriptLoaded;\n\n    if (isLoadedButWasntLoadedBefore) {\n      if (isScriptLoadSucceed) {\n        this.setState({\n          showButton: true\n        });\n      }\n    }\n  }\n\n  render() {\n    const paypal = window.paypal;\n    const _this$props2 = this.props,\n          isScriptLoaded = _this$props2.isScriptLoaded,\n          isScriptLoadSucceed = _this$props2.isScriptLoadSucceed;\n    const _this$props3 = this.props,\n          total = _this$props3.total,\n          currency = _this$props3.currency,\n          env = _this$props3.env,\n          commit = _this$props3.commit,\n          client = _this$props3.client,\n          onSuccess = _this$props3.onSuccess,\n          onError = _this$props3.onError,\n          onCancel = _this$props3.onCancel;\n    const showButton = this.state.showButton;\n\n    const payment = () => paypal.rest.payment.create(env, client, {\n      transactions: [{\n        amount: {\n          total,\n          currency\n        }\n      }]\n    });\n\n    const onAuthorize = (data, actions) => actions.payment.execute().then(() => {\n      const payment = {\n        paid: true,\n        cancelled: false,\n        payerID: data.payerID,\n        paymentID: data.paymentID,\n        paymentToken: data.paymentToken,\n        returnUrl: data.returnUrl\n      };\n      onSuccess(payment);\n    });\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, showButton && React.createElement(paypal.Button.react, {\n      env: env,\n      client: client,\n      commit: commit,\n      payment: payment,\n      onAuthorize: onAuthorize,\n      onCancel: onCancel,\n      onError: onError,\n      onSuccess: onSuccess,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })); // Todo\n  }\n\n}\n\nexport default scriptLoader('https://www.paypalobjects.com/api/checkout.js')(PaypalButton);","map":{"version":3,"sources":["C:/Users/kieu/Desktop/final_project/my_app/src/Component/Paypal/PaypalButton.js"],"names":["React","ReactDOM","scriptLoader","PaypalButton","Component","constructor","props","state","showButton","window","componentDidMount","isScriptLoaded","isScriptLoadSucceed","setState","componentWillReceiveProps","nextProps","isLoadedButWasntLoadedBefore","render","paypal","total","currency","env","commit","client","onSuccess","onError","onCancel","payment","rest","create","transactions","amount","onAuthorize","data","actions","execute","then","paid","cancelled","payerID","paymentID","paymentToken","returnUrl"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport scriptLoader from 'react-async-script-loader';\r\nclass PaypalButton extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showButton: false,\r\n    };\r\n    window.React = React;\r\n    window.ReactDOM = ReactDOM;\r\n  }\r\n  componentDidMount() {\r\n    const {\r\n      isScriptLoaded,\r\n      isScriptLoadSucceed\r\n    } = this.props;\r\n    if (isScriptLoaded && isScriptLoadSucceed) {\r\n      this.setState({ showButton: true });\r\n    }\r\n  }\r\n  \r\n  componentWillReceiveProps(nextProps) {\r\n    const {\r\n      isScriptLoaded,\r\n      isScriptLoadSucceed,\r\n    } = nextProps;\r\n    const isLoadedButWasntLoadedBefore =\r\n      !this.state.showButton &&\r\n      !this.props.isScriptLoaded &&\r\n      isScriptLoaded;\r\n    if (isLoadedButWasntLoadedBefore) {\r\n      if (isScriptLoadSucceed) {\r\n        this.setState({ showButton: true });\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    const paypal=window.paypal;\r\n    const { isScriptLoaded, isScriptLoadSucceed } = this.props;\r\n\r\n    const {\r\n        total,\r\n        currency,\r\n        env,\r\n        commit,\r\n        client,\r\n        onSuccess,\r\n        onError,\r\n        onCancel,\r\n      } = this.props;\r\n      const {\r\n        showButton,\r\n      } = this.state;\r\n      const payment = () =>\r\n      paypal.rest.payment.create(env, client, {\r\n        transactions: [\r\n          {\r\n            amount: {\r\n              total,\r\n              currency,\r\n            }\r\n          },\r\n        ],\r\n      });\r\n    const onAuthorize = (data, actions) =>\r\n      actions.payment.execute()\r\n        .then(() => {\r\n          const payment = {\r\n            paid: true,\r\n            cancelled: false,\r\n            payerID: data.payerID,\r\n            paymentID: data.paymentID,\r\n            paymentToken: data.paymentToken,\r\n            returnUrl: data.returnUrl,\r\n          };\r\n          onSuccess(payment);\r\n        });\r\n\r\n      return (\r\n          \r\n        <div>\r\n          {showButton && <paypal.Button.react\r\n            env={env}\r\n            client={client}\r\n            commit={commit}\r\n            payment={payment}\r\n            onAuthorize={onAuthorize}\r\n            onCancel={onCancel}\r\n            onError={onError}\r\n            onSuccess={onSuccess}\r\n          />}\r\n        </div>\r\n      )\r\n\r\n    // Todo\r\n  }\r\n}\r\nexport default scriptLoader('https://www.paypalobjects.com/api/checkout.js')(PaypalButton);"]},"metadata":{},"sourceType":"module"}