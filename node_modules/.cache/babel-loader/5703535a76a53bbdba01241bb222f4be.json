{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\kieu\\\\Desktop\\\\final_project\\\\my_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//Login\nimport axios from 'axios';\nimport APICaller from \"../utils/APICaller\";\nconst SET_LOGIN = 'SET_LOGIN';\nexport function login(email, password) {\n  //reducer thuc hien action login xu ly du lieu lay qua\n  return async dispatch => {\n    dispatch(setLoginSuccess(false));\n    APICaller('api/Token/', 'GET', email, password).then(response => {\n      if (response.status == \"400\") dispatch({\n        type: SET_LOGIN,\n        payload: false\n      });else {\n        localStorage.setItem(\"token\", response);\n        dispatch({\n          type: SET_LOGIN,\n          payload: true\n        });\n      }\n    }).catch(err => window.alert('Sai MK'));\n  };\n}\nexport function logout() {\n  //reducer thuc hien action login xu ly du lieu lay qua\n  return dispatch => {\n    localStorage.clear();\n    dispatch(setLoginSuccess(false));\n  };\n}\nvar a = false;\nvar data = localStorage.getItem('token');\nif (data != null) a = true;\nvar login_state = {\n  isLoginSuccess: a\n};\nexport default function login_reducer(state = login_state, action) {\n  if (action.type == 'SET_LOGIN') {\n    let newState = _objectSpread({}, state);\n\n    newState.isLoginSuccess = action.payload;\n    return newState;\n  }\n\n  return state;\n}","map":{"version":3,"sources":["C:/Users/kieu/Desktop/final_project/my_app/src/redux/login_reducer.js"],"names":["axios","APICaller","SET_LOGIN","login","email","password","dispatch","setLoginSuccess","then","response","status","type","payload","localStorage","setItem","catch","err","window","alert","logout","clear","a","data","getItem","login_state","isLoginSuccess","login_reducer","state","action","newState"],"mappings":";;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,MAAMC,SAAS,GAAG,WAAlB;AACA,OAAO,SAASC,KAAT,CAAeC,KAAf,EAAsBC,QAAtB,EAAgC;AAAE;AACvC,SAAO,MAAMC,QAAN,IAAkB;AACvBA,IAAAA,QAAQ,CAACC,eAAe,CAAC,KAAD,CAAhB,CAAR;AACAN,IAAAA,SAAS,CAAC,YAAD,EAAe,KAAf,EAAqBG,KAArB,EAA2BC,QAA3B,CAAT,CACCG,IADD,CACMC,QAAQ,IAAI;AACd,UAAGA,QAAQ,CAACC,MAAT,IAAiB,KAApB,EAA2BJ,QAAQ,CAAE;AAACK,QAAAA,IAAI,EAACT,SAAN;AAAiBU,QAAAA,OAAO,EAAC;AAAzB,OAAF,CAAR,CAA3B,KACK;AAAEC,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6BL,QAA7B;AACLH,QAAAA,QAAQ,CAAE;AAACK,UAAAA,IAAI,EAACT,SAAN;AAAiBU,UAAAA,OAAO,EAAC;AAAzB,SAAF,CAAR;AACL;AAEA,KAPD,EAOGG,KAPH,CAOSC,GAAG,IAAIC,MAAM,CAACC,KAAP,CAAa,QAAb,CAPhB;AAQH,GAVC;AAYD;AACD,OAAO,SAASC,MAAT,GAAkB;AAAE;AACzB,SAAOb,QAAQ,IAAI;AACjBO,IAAAA,YAAY,CAACO,KAAb;AACAd,IAAAA,QAAQ,CAACC,eAAe,CAAC,KAAD,CAAhB,CAAR;AACH,GAHC;AAID;AAED,IAAIc,CAAC,GAAC,KAAN;AACC,IAAIC,IAAI,GAACT,YAAY,CAACU,OAAb,CAAqB,OAArB,CAAT;AACA,IAAGD,IAAI,IAAE,IAAT,EAAeD,CAAC,GAAC,IAAF;AAChB,IAAIG,WAAW,GAAC;AAEdC,EAAAA,cAAc,EAACJ;AAFD,CAAhB;AAIA,eAAe,SAASK,aAAT,CAAuBC,KAAK,GAAEH,WAA9B,EAA2CI,MAA3C,EAAmD;AAEhE,MAAGA,MAAM,CAACjB,IAAP,IAAa,WAAhB,EACA;AAAG,QAAIkB,QAAQ,qBAAKF,KAAL,CAAZ;;AACAE,IAAAA,QAAQ,CAACJ,cAAT,GAAwBG,MAAM,CAAChB,OAA/B;AACA,WAAOiB,QAAP;AACD;;AACD,SAAOF,KAAP;AAEF","sourcesContent":["//Login\r\nimport axios from 'axios';\r\nimport APICaller from \"../utils/APICaller\";\r\nconst SET_LOGIN = 'SET_LOGIN';\r\nexport function login(email, password) { //reducer thuc hien action login xu ly du lieu lay qua\r\n  return async dispatch => {\r\n    dispatch(setLoginSuccess(false));\r\n    APICaller('api/Token/', 'GET',email,password)\r\n    .then(response => {\r\n        if(response.status==\"400\") dispatch ({type:SET_LOGIN, payload:false});\r\n        else { localStorage.setItem(\"token\",response);\r\n          dispatch ({type:SET_LOGIN, payload:true});\r\n    }\r\n     \r\n    }).catch(err => window.alert('Sai MK'));\r\n}\r\n  \r\n}\r\nexport function logout() { //reducer thuc hien action login xu ly du lieu lay qua\r\n  return dispatch => {\r\n    localStorage.clear();\r\n    dispatch(setLoginSuccess(false));\r\n}\r\n}\r\n\r\nvar a=false;\r\n var data=localStorage.getItem('token') \r\n if(data!=null) a=true;\r\nvar login_state={\r\n \r\n  isLoginSuccess:a,\r\n}\r\nexport default function login_reducer(state =login_state, action) {\r\n  \r\n  if(action.type=='SET_LOGIN')\r\n  {  let newState={...state};\r\n     newState.isLoginSuccess=action.payload\r\n     return newState;\r\n   }\r\n   return state;\r\n  \r\n}"]},"metadata":{},"sourceType":"module"}